@model MeuRH360.Web.Models.DadosViewModel


@{
    ViewData["Title"] = "";
}


<div class="text-center">
    <h4 class="py-sm-2">Olá, @ViewBag.NomeUsuario . Seja bem-vindo!</h4>
    <h6 class="py-sm-2">É necessário configurar a empresa matriz para visualizar todas as informações do sistema.</h6>

    @*<center>
            <button type="button" id="btStart" class="btn btn-primary btn-lg btn-block">Iniciar Configuração</button>
        </center>*@

</div>

<script src="~/lib/jquery/dist/jquery.js"></script>


<center>
    <!-- Modal extra grande -->

    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalExemplo">
        Iniciar Configuração
    </button>

</center>

<!-- Botão para acionar modal -->
<!-- Modal -->
<div class="modal fade" id="modalExemplo" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Título do modal</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Save", "Home", FormMethod.Post, new { id = "formMatriz" }))
                {

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Tipo da Empresa</label>
                            @Html.TextBoxFor(model => model.Matriz.Tipo, new { @class = "form-control", @id = "txtTipo" })

                        </div>
                    </div>


                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="inputEmail4">Nome da empresa*</label>
                            @Html.TextBoxFor(model => model.Matriz.NomeEmpresa, new { @class = "form-control", @id = "txtEmpresa" })
                            @Html.ValidationMessageFor(model => model.Matriz.NomeEmpresa)

                        </div>
                        <div class="form-group col-md-6">
                            <label for="inputPassword4">CNPJ da empresa*</label>
                            @Html.TextBoxFor(model => model.Matriz.CNPJ, new { @class = "form-control", @maxlength = 14, @id = "txtCNPJ" })
                            @Html.ValidationMessageFor(model => model.Matriz.CNPJ)
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-5">
                            <label for="inputEmail4">Cep</label>
                            @Html.TextBoxFor(model => model.Matriz.Cep, new { @class = "form-control", @id = "txtCep" })
                        </div>
                    </div>


                    <div class="form-group">
                        <label for="inputAddress">Endereço</label>
                        @Html.TextBoxFor(model => model.Matriz.Endereco, new { @class = "form-control", @id = "txtEndereco" })
                    </div>
                    <div class="form-group">
                        <label for="inputAddress2">Bairro</label>
                        @Html.TextBoxFor(model => model.Matriz.Bairro, new { @class = "form-control", @id = "txtBairro" })
                    </div>
                    <div class="form-row">

                        <div class="form-group col-md-4">
                            <label for="inputEstado">Estado</label>
                            @Html.TextBoxFor(model => model.Matriz.Estado, new { @class = "form-control", @id = "txtEstado" })
                        </div>

                        <div class="form-group col-md-6">
                            <label for="inputCity">Cidade</label>
                            @Html.TextBoxFor(model => model.Matriz.Cidade, new { @class = "form-control", @id = "txtCidade" })
                        </div>

                        <div class="form-group col-md-8">
                            <label for="inputCity">Complemento</label>
                            @Html.TextBoxFor(model => model.Matriz.Complemento, new { @class = "form-control", @id = "txtComplemento" })
                        </div>

                    </div>

                 
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label for="inputEstado">Celular*</label>
                            @Html.TextBoxFor(model => model.Matriz.Celular, new { @class = "form-control", @id = "txtCelular" })
                            @Html.ValidationMessageFor(model => model.Matriz.Celular)
                        </div>

                        <div class="form-group col-md-6">
                            <label for="inputCity">Nome do administrador*</label>
                            @Html.TextBoxFor(model => model.Matriz.NomeAdm, new { @class = "form-control", @id = "txtNomeAdm" })
                            @Html.ValidationMessageFor(model => model.Matriz.NomeAdm)
                        </div>

                        <div class="form-group col-md-8">
                            <label for="inputCity">CPF*</label>
                            @Html.TextBoxFor(model => model.Matriz.CPF, new { @class = "form-control", @maxlength = 11, @id = "txtCPF" })
                            @Html.ValidationMessageFor(model => model.Matriz.CPF)
                        </div>

                        <div class="form-group col-md-8">
                            <label for="inputCity">Email*</label>
                            @Html.TextBoxFor(model => model.Matriz.Email, new { @class = "form-control", @id = "txtEmail" })
                            @Html.ValidationMessageFor(model => model.Matriz.Email)
                        </div>

                    </div>

                    @section Scripts {
                        <script src="~/lib/jquery/dist/jquery.js"></script>
                        <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
                        <script src="~/lib/jquery-validation/dist/jquery.validate.unobtrusive.min.js"></script>
                    }


                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>                              
                <button type="button" id="btCadastrar" class="btn btn-primary">Salvar</button>

            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
               
        $("#btCadastrar").click(function () {

            //if ($('#chkAceito').is(':checked'))
            //    $("#formPessoa").submit();
            //else
            //    alert('Você deve aceitar o contrato de privacidade e de termos de serviço.');

            var cpf = $("#txtCPF").val();
         

            if (IsCpfValid(cpf)) {                             
                $("#formMatriz").submit();
            }

            else {
                alert('CPF Inválido!')
                return false;
            }


            var cnpj = $("#txtCNPJ").val();
           
            if (IsCnpjValid(cnpj)) {
               
                $("#formMatriz").submit();
            }

            else {
                alert('CNPJ Inválido!')
                return false;
            }


            $("#formMatriz").submit();



        });



    });



    function IsCpfValid(cpf) {

        var cpf = cpf.replace(".", "").replace(".", "").replace(".", "").replace("-", "");

        var numeros, digitos, soma, i, resultado, digitos_iguais;
        digitos_iguais = 1;
        if (cpf.length < 11)
            return false;
        for (i = 0; i < cpf.length - 1; i++)
            if (cpf.charAt(i) != cpf.charAt(i + 1)) {
                digitos_iguais = 0;
                break;
            }
        if (!digitos_iguais) {
            numeros = cpf.substring(0, 9);
            digitos = cpf.substring(9);
            soma = 0;
            for (i = 10; i > 1; i--)
                soma += numeros.charAt(10 - i) * i;
            resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
            if (resultado != digitos.charAt(0))
                return false;
            numeros = cpf.substring(0, 10);
            soma = 0;
            for (i = 11; i > 1; i--)
                soma += numeros.charAt(11 - i) * i;
            resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
            if (resultado != digitos.charAt(1))
                return false;
            return true;
        }
        else
            return false;
    }


    function IsCnpjValid(cnpj) {

        cnpj = cnpj.replace(/[^\d]+/g, '');

        if (cnpj == '') return false;

        if (cnpj.length != 14)
            return false;


        if (cnpj == "00000000000000" ||
            cnpj == "11111111111111" ||
            cnpj == "22222222222222" ||
            cnpj == "33333333333333" ||
            cnpj == "44444444444444" ||
            cnpj == "55555555555555" ||
            cnpj == "66666666666666" ||
            cnpj == "77777777777777" ||
            cnpj == "88888888888888" ||
            cnpj == "99999999999999")
            return false;


        tamanho = cnpj.length - 2
        numeros = cnpj.substring(0, tamanho);
        digitos = cnpj.substring(tamanho);
        soma = 0;
        pos = tamanho - 7;
        for (i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(0)) return false;
        tamanho = tamanho + 1;
        numeros = cnpj.substring(0, tamanho);
        soma = 0;
        pos = tamanho - 7;
        for (i = tamanho; i >= 1; i--) {
            soma += numeros.charAt(tamanho - i) * pos--;
            if (pos < 2)
                pos = 9;
        }
        resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
        if (resultado != digitos.charAt(1))
            return false;

        return true;

    }


    $("#txtCep").blur(function () {

        //Nova variável "cep" somente com dígitos.
        var cep = $(this).val().replace(/\D/g, '');

        //Verifica se campo cep possui valor informado.
        if (cep != "") {

            //Expressão regular para validar o CEP.
            var validacep = /^[0-9]{8}$/;

            //Valida o formato do CEP.
            if (validacep.test(cep)) {

                //Preenche os campos com "..." enquanto consulta webservice.
                $("#rua").val("...");
                $("#bairro").val("...");
                $("#cidade").val("...");
                $("#uf").val("...");
                $("#ibge").val("...");

                //Consulta o webservice viacep.com.br/
                $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                    if (!("erro" in dados)) {
                        //Atualiza os campos com os valores da consulta.
                        $("#txtEndereco").val(dados.logradouro);
                        $("#txtBairro").val(dados.bairro);
                        $("#txtCidade").val(dados.localidade);
                        $("#txtEstado").val(dados.uf);
                        //$("#ibge").val(dados.ibge);
                    } //end if.
                    else {
                        //CEP pesquisado não foi encontrado.
                        limpa_formulário_cep();
                        alert("CEP não encontrado.");
                    }
                });
            } //end if.
            else {
                //cep é inválido.
                limpa_formulário_cep();
                alert("Formato de CEP inválido.");
            }
        } //end if.
        else {
            //cep sem valor, limpa formulário.
            limpa_formulário_cep();
        }
    });

</script>